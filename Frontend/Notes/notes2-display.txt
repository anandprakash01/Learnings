rgba
r - red 
g - green 
b - blue 
a - opacity 
range(0-255)
opacity - 0 or 0.1,,,0.9,1
color:rgba(255,0,0,1);
color: hsla(hue, saturation, lightness, alpha);
//always try to use hexadecimal color
====================================================================
display property:
1.block 
example:
display:block
//it will block entire line and next tag will start in new line
//width and height will work here
//mostly we can change the inline to block if requirment is there

2.inline
example:
display:inline
//it will continue in the same line
//width and height will not work here
//block to inline mostly we will not have this requirement.

3.inline-block 
//it will continue in the same line but will accept the width and height.
//inline to inline-block and block to inline-block.
=========================================================

Table:
//Instead of using table tag to create table we can use css properties to create our own table:
properties:
To create table 
display:table 
To create row inside the table 
display:table-row 
To create column inside the table 
display:table-cell

Flex:
//By using the flex property we can create responsive design in row wise manner or column manner.
display:flex 
flex-wrap: wrap; --> it will not change the width of the box everything will come in next line if not space is available.
justify-content: center; --> it will bring all the box in the center of the page.

text-effects:
1.white-space -> it will try to continue in the same line
example:
white-space:nowrap

2.overflow 
//if contain is going outside of the box. it will try to hide the contain by following property:
overflow:hidden

//if you need to scroll in vertical direction
overflow-y:scroll

3.text-overflow 
//if you need three dots at the end position for hidding content 
text-overflow:ellipsis

4.word-break 
//to break the word to accommodate in the unused space we can use this property:
word-break:break-all;
//default properties will not break the word in the middle.
word-break:break-word;

5.writing-mode 
writing the content in vertical direction
writing-mode: vertical-lr;
====================================
Display:grid
//it is 2d (dimension) property.
Steps to be followed.
1.we need to segragate into different blocks.
example;
header,footer,sidebar,banner,main
2.we need to give grid-area for all the blocks 
example:
.header{grid-area:header;}
3.we need to give following things inside the parent container
example:
display:grid 
gap:50px; it will give margin between the sections 
  grid-template-areas: 'header'
            'main'
            'footer';
//it will create the sections into multiple rows and columns
//each row should have equal number of columns
//if we have different columns names in one row in another rows you can use the same column to extend the width of that paritcular area.
=====================================================
Project creation steps:
1.first create project folders 
2.Download images and put inside the project folders 
3.design grid for entire web page and give some dummy background colors 
4.start adding images in particular position using background-image property
5.start adding content paragraph and heading in particular places 
6.algin the text content using padding ,margin and border 
7.add font-family,font-size,font-weight 
8.find proper background-color and others color property 
9.add box-shadow and border-radius whereever is needed.
10.finally check the entire flow one time in chrome browser 
11.please push the code in gihub.
=========================================================     
